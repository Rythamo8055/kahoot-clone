// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Summarizes quiz results to provide insights into overall user performance.
 *
 * - summarizeQuizResults - A function that handles the summarization of quiz results.
 * - SummarizeQuizResultsInput - The input type for the summarizeQuizResults function.
 * - SummarizeQuizResultsOutput - The return type for the summarizeQuizResults function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SummarizeQuizResultsInputSchema = z.object({
  quizName: z.string().describe('The name of the quiz.'),
  results: z.array(
    z.object({
      userId: z.string().describe('The ID of the user who took the quiz.'),
      score: z.number().describe('The user\'s score on the quiz.'),
      answers: z.record(z.string(), z.string()).describe('The user\'s answers to the quiz questions.'),
    })
  ).describe('An array of quiz results.'),
});
export type SummarizeQuizResultsInput = z.infer<typeof SummarizeQuizResultsInputSchema>;

const SummarizeQuizResultsOutputSchema = z.object({
  summary: z.string().describe('A summary of the quiz results, including overall performance and key insights.'),
});
export type SummarizeQuizResultsOutput = z.infer<typeof SummarizeQuizResultsOutputSchema>;

export async function summarizeQuizResults(input: SummarizeQuizResultsInput): Promise<SummarizeQuizResultsOutput> {
  return summarizeQuizResultsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'summarizeQuizResultsPrompt',
  input: {schema: SummarizeQuizResultsInputSchema},
  output: {schema: SummarizeQuizResultsOutputSchema},
  prompt: `You are an expert quiz analyst. Given the results of a quiz, provide a summary of the overall performance.

Quiz Name: {{{quizName}}}

Results:
{{#each results}}
  User ID: {{{userId}}}, Score: {{{score}}}
{{/each}}

Summary:`, 
});

const summarizeQuizResultsFlow = ai.defineFlow(
  {
    name: 'summarizeQuizResultsFlow',
    inputSchema: SummarizeQuizResultsInputSchema,
    outputSchema: SummarizeQuizResultsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
